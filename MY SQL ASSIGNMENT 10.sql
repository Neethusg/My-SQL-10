-- CREATING DATABASE
CREATE DATABASE ASSIGNMENT10;
USE ASSIGNMENT10;

#1. CREATING TABLE
CREATE TABLE TEACHERS 
(
ID INT AUTO_INCREMENT PRIMARY KEY,
NAME VARCHAR(100) NOT NULL,
SUBJECT VARCHAR (50),
EXPERIENCE INT,
SALARY DECIMAL (10,2)
);

-- INSERTING VALUES INTO TABLE
INSERT INTO TEACHERS
VALUES
(DEFAULT, 'ANNIE PHILIP', 'MATHEMATICS', '5', '25000.00'),
(DEFAULT, 'JACOB ALAXANDER', 'PHISICS', '10', '55000.00'),
(DEFAULT, 'GEORGE MATHEW', 'CHEMISTRY', '5', '25000.00'),
(DEFAULT, 'JYOTHI', 'MALAYALAM', '5', '15000.00'),
(DEFAULT, 'AYANA NATH', 'ENGLISH', '9', '45000.00'),
(DEFAULT, 'ALICE DOE', 'BIOLOGY', '15', '75000.00'),
(DEFAULT, 'ALEENA GEORGE', 'MATHEMATICS', '5', '25000.00'),
(DEFAULT, 'SHERIN JOSE', 'HISTORY', '7', '45000.00'),
(DEFAULT, 'SUSAN MATHEW', 'HINDI', '5', '25000.00');

SELECT * FROM TEACHERS;

#2. CREATE A BEFORE INSERT TRIGGER NAMED BEFORE_INSERT_TEACHER THAT WILL RISE AN ERROR SALARY CANNOT BE NEGATIVE

DELIMITER //
CREATE TRIGGER BEFORE_INSERT_TEACHER
BEFORE INSERT ON TEACHERS
FOR EACH ROW
BEGIN
IF NEW.SALARY < 0 THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT  = 'SALARY CANNOT BE NEGATIVE';
END IF ;
END //
DELIMITER ;

INSERT INTO TEACHERS
VALUES
(DEFAULT, 'ANDREA PHILIP', 'MATHEMATICS', '5', '-1000');

#3. CREATE AN AFTER TRIGGER NAMED AFTER_INSERT_TEACHER THAT INSERTS A ROW WITH TEACHER_ID, ACTION, TIMESTAMP TO A TABLE CALLED TEACHER_LOG
CREATE TABLE TEACHER_LOG
(
LOG_ID INT AUTO_INCREMENT PRIMARY KEY,
TEACHER_ID INT,
ACTIONTYPE VARCHAR (100),
ActionTime timestamp default current_timestamp
);

-- AFTER INSERT TRIGGER

DELIMITER //
CREATE TRIGGER AFTER_INSERT_TEACHER
AFTER INSERT ON TEACHERS 
FOR EACH ROW
BEGIN
INSERT INTO TEACHER_LOG 
(TEACHER_ID, ACTIONTYPE)
VALUES (NEW.ID, 'INSERT');
END //
DELIMITER ;

SELECT * FROM TEACHER_LOG;

INSERT INTO TEACHERS (ID, NAME, SUBJECT, EXPERIENCE, SALARY)
VALUES
(DEFAULT, 'ANN MARIA', 'CHEMISTRY', '5', '35000.00');

#4. CREATE A BEFORE TRIGGER TAHT WILL RISE AN ERROR WHEN TRY TO DELETE A ROW THAT HAS AN EXPERINCE GREATER THAN 10 YEARS

DELIMITER //
CREATE TRIGGER BEFORE_DELETE_TEACHER 
BEFORE DELETE ON TEACHERS
FOR EACH ROW
BEGIN
IF OLD.EXPERIENCE > 10 THEN
SIGNAL SQLSTATE '45000' 
SET MESSAGE_TEXT = ' CANNOT DELETE TEACHERS WITH MORE THAN 10 YEARS' ;
END IF ;
END //
DELIMITER ;

DELETE FROM TEACHERS WHERE NAME = 'ALICE DOE';

#5. CREATE AN AFTER TRIGGER THAT WILL INSERT A ROW TO TEACHER_LOG TABLE WHEN THAT ROW IS DELETED FROM TEACHER TABLE

DELIMITER //
CREATE TRIGGER AFTER_DELETE_TEACHER
AFTER DELETE ON TEACHERS
FOR EACH ROW
BEGIN
INSERT INTO TEACHER_LOG (TEACHER_ID, ACTIONTYPE)
VALUES
(OLD.ID, 'DELETE');
END //
DELIMITER ;

DELETE FROM TEACHERS
WHERE ID = 2;

SELECT * FROM TEACHER_LOG;
